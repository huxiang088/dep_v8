name: Build on Linux

on:
    workflow_call:
        inputs:
            version:
                type: string
                required: true
            commit:
                type: string
                required: true
        outputs:
            runid:
                description: Run ID
                value: ${{github.run_id}}
    workflow_dispatch:
        inputs:
            version:
                type: string
                description: Target version of V8.
                required: true
            commit:
                type: string
                description: Target commit of V8.
                required: true

jobs:
    x64:
        runs-on: ubuntu-latest
        steps:

          - name: Checkout This Repo
            uses: actions/checkout@v4
            with:
                clean: true
                fetch-depth: 1

          - name: Remove Everything to Free Up Space
            shell: bash
            run: |
                sudo apt update
                sudo apt remove acl ant ant-optional apache2 aria2 azure-cli brotli buildah clang-16 clang-17 clang-18 clang-format-16 clang-format-17 clang-format-18 clang-tidy-16 clang-tidy-17 clang-tidy-18 cloud-init containerd.io dbus docker-ce docker-ce-cli dotnet-sdk-8.0 dpkg-dev eatmydata efibootmgr firefox fonts-noto-color-emoji ftp g++ g++-12 g++-13 g++-14 gcc gfortran gfortran-12 gfortran-13 gfortran-14 gnupg gnupg2 google-chrome-stable google-cloud-cli haveged kubectl libeatmydata1 liblz4-dev libmysqlclient-dev libsqlite3-dev libssl-dev libtss2-esys-3.0.2-0t64 libtss2-mu-4.0.1-0t64 libtss2-rc0t64 libwrap0 libyaml-dev linux-azure linux-cloud-tools-6.8.0-1021-azure linux-headers-6.8.0-1021-azure lld-16 lld-17 lld-18 lldb-18 locales lsb-release lsscsi mediainfo mercurial microsoft-edge-stable mysql-client mysql-server ncurses-term nftables nginx nvme-cli p7zip-rar packages-microsoft-prod php-pear php8.3 php8.3-amqp php8.3-apcu php8.3-bcmath php8.3-bz2 php8.3-cgi php8.3-cli php8.3-common php8.3-curl php8.3-dba php8.3-dev php8.3-enchant php8.3-fpm php8.3-gd php8.3-gmp php8.3-igbinary php8.3-imagick php8.3-imap php8.3-interbase php8.3-intl php8.3-ldap php8.3-mbstring php8.3-memcache php8.3-memcached php8.3-mongodb php8.3-mysql php8.3-odbc php8.3-opcache php8.3-pcov php8.3-pgsql php8.3-phpdbg php8.3-pspell php8.3-readline php8.3-redis php8.3-snmp php8.3-soap php8.3-sqlite3 php8.3-sybase php8.3-tidy php8.3-xdebug php8.3-xml php8.3-xsl php8.3-yaml php8.3-zip php8.3-zmq podman postgresql-16 python-babel-localedata python-is-python3 python3-babel python3-jinja2 python3-json-pointer python3-jsonpatch python3-jsonschema python3-markupsafe python3-parted python3-pip python3-pyrsistent python3-serial python3-six python3-venv python3-tz rpm rsync ruby-full sphinxsearch sqlite3 temurin-11-jdk temurin-17-jdk temurin-21-jdk temurin-8-jdk ubuntu-minimal ubuntu-server ubuntu-standard upx-ucl walinuxagent xvfb zip zlib1g-dev zsync
                sudo apt autoremove -y
                sudo rm -rf /etc/skel
                sudo rm -rf /opt/hostedtoolcache
                sudo rm -rf /opt/pipx
                sudo rm -rf /tmp/*
                sudo rm -rf /usr/local/.ghcup
                sudo rm -rf /usr/local/aws-cli
                sudo rm -rf /usr/local/aws-sam-cli
                sudo rm -rf /usr/local/bin/azcopy
                sudo rm -rf /usr/local/bin/bicep
                sudo rm -rf /usr/local/bin/cmake-gui
                sudo rm -rf /usr/local/bin/helm
                sudo rm -rf /usr/local/bin/minikube
                sudo rm -rf /usr/local/bin/node
                sudo rm -rf /usr/local/bin/packer
                sudo rm -rf /usr/local/bin/pulumi
                sudo rm -rf /usr/local/bin/pulumi-language-dotnet
                sudo rm -rf /usr/local/bin/pulumi-language-go
                sudo rm -rf /usr/local/bin/pulumi-language-java
                sudo rm -rf /usr/local/bin/pulumi-language-nodejs
                sudo rm -rf /usr/local/bin/pulumi-language-python
                sudo rm -rf /usr/local/bin/pulumi-language-yaml
                sudo rm -rf /usr/local/bin/stack
                sudo rm -rf /usr/local/julia1.11.4
                sudo rm -rf /usr/local/gradle-8.13
                sudo rm -rf /usr/local/lib/android
                sudo rm -rf /usr/local/lib/node_modules
                sudo rm -rf /usr/local/miniconda
                sudo rm -rf /usr/local/n
                sudo rm -rf /usr/local/share/chromium
                sudo rm -rf /usr/local/share/cmake-3.31
                sudo rm -rf /usr/local/share/edge_driver
                sudo rm -rf /usr/local/share/emacs
                sudo rm -rf /usr/local/share/powershell/Modules/Microsoft.Graph
                sudo rm -rf /usr/local/share/powershell/Modules/Microsoft.Graph.Applications
                sudo rm -rf /usr/local/share/powershell/Modules/Microsoft.Graph.Authentication
                sudo rm -rf /usr/local/share/powershell/Modules/Microsoft.Graph.BackupRestore
                sudo rm -rf /usr/local/share/powershell/Modules/Microsoft.Graph.Bookings
                sudo rm -rf /usr/local/share/powershell/Modules/Microsoft.Graph.Calendar
                sudo rm -rf /usr/local/share/powershell/Modules/Microsoft.Graph.ChangeNotifications
                sudo rm -rf /usr/local/share/powershell/Modules/Microsoft.Graph.CloudCommunications
                sudo rm -rf /usr/local/share/powershell/Modules/Microsoft.Graph.Compliance
                sudo rm -rf /usr/local/share/powershell/Modules/Microsoft.Graph.CrossDeviceExperiences
                sudo rm -rf /usr/local/share/powershell/Modules/Microsoft.Graph.DeviceManagement
                sudo rm -rf /usr/local/share/powershell/Modules/Microsoft.Graph.DeviceManagement.Administration
                sudo rm -rf /usr/local/share/powershell/Modules/Microsoft.Graph.DeviceManagement.Enrollment
                sudo rm -rf /usr/local/share/powershell/Modules/Microsoft.Graph.DeviceManagement.Functions
                sudo rm -rf /usr/local/share/powershell/Modules/Microsoft.Graph.Devices.CloudPrint
                sudo rm -rf /usr/local/share/powershell/Modules/Microsoft.Graph.Devices.CorporateManagement
                sudo rm -rf /usr/local/share/powershell/Modules/Microsoft.Graph.Devices.ServiceAnnouncement
                sudo rm -rf /usr/local/share/powershell/Modules/Microsoft.Graph.DirectoryObjects
                sudo rm -rf /usr/local/share/powershell/Modules/Microsoft.Graph.Education
                sudo rm -rf /usr/local/share/powershell/Modules/Microsoft.Graph.Files
                sudo rm -rf /usr/local/share/powershell/Modules/Microsoft.Graph.Groups
                sudo rm -rf /usr/local/share/powershell/Modules/Microsoft.Graph.Identity.DirectoryManagement
                sudo rm -rf /usr/local/share/powershell/Modules/Microsoft.Graph.Identity.Governance
                sudo rm -rf /usr/local/share/powershell/Modules/Microsoft.Graph.Identity.Partner
                sudo rm -rf /usr/local/share/powershell/Modules/Microsoft.Graph.Identity.SignIns
                sudo rm -rf /usr/local/share/powershell/Modules/Microsoft.Graph.Mail
                sudo rm -rf /usr/local/share/powershell/Modules/Microsoft.Graph.Notes
                sudo rm -rf /usr/local/share/powershell/Modules/Microsoft.Graph.People
                sudo rm -rf /usr/local/share/powershell/Modules/Microsoft.Graph.PersonalContacts
                sudo rm -rf /usr/local/share/powershell/Modules/Microsoft.Graph.Planner
                sudo rm -rf /usr/local/share/powershell/Modules/Microsoft.Graph.Reports
                sudo rm -rf /usr/local/share/powershell/Modules/Microsoft.Graph.SchemaExtensions
                sudo rm -rf /usr/local/share/powershell/Modules/Microsoft.Graph.Search
                sudo rm -rf /usr/local/share/powershell/Modules/Microsoft.Graph.Security
                sudo rm -rf /usr/local/share/powershell/Modules/Microsoft.Graph.Sites
                sudo rm -rf /usr/local/share/powershell/Modules/Microsoft.Graph.Teams
                sudo rm -rf /usr/local/share/powershell/Modules/Microsoft.Graph.Users
                sudo rm -rf /usr/local/share/powershell/Modules/Microsoft.Graph.Users.Actions
                sudo rm -rf /usr/local/share/powershell/Modules/Microsoft.Graph.Users.Functions
                sudo rm -rf /usr/local/share/vcpkg
                sudo rm -rf /usr/local/swift
                sudo rm -rf /usr/local/android
                sudo rm -rf /usr/local/node_modules
                sudo rm -rf /usr/share/az_12.1.0
                sudo rm -rf /usr/share/doc
                sudo rm -rf /usr/share/gradle-8.13
                sudo rm -rf /usr/share/kotlinc
                sudo rm -rf /usr/share/java
                sudo rm -rf /usr/share/locale
                sudo rm -rf /usr/share/man
                sudo rm -rf /usr/share/miniconda
                sudo rm -rf /usr/share/perl
                sudo rm -rf /usr/share/swift
                sudo apt update
                sudo apt install g++-14
                sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-14 100
                sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-14 100
                sudo apt clean
                sudo rm -rf /var/*
                df -h

          - name: Set Global Git Configs
            shell: bash
            run: |
                git config --global core.autocrlf false
                git config --global core.filemode false
                git config --global core.longpaths true
                git config --global core.preloadindex true
                git config --global core.fscache true

          - name: Check Depot Tools
            uses: newkdev/setup-depot-tools@v1.0.1

          - name: Checkout V8 Source Code
            shell: bash
            run: |
                mkdir v8
                cd v8
                fetch v8

          - name: Checkout Target Commit
            shell: bash
            run: |
                cd v8/v8
                git config branch.autosetupmerge always
                git config branch.autosetuprebase always
                git checkout ${{inputs.commit}}

          - name: Sync GClient
            shell: bash
            run: |
                cd v8/v8
                gclient sync -D

          - name: Build V8 Linux x64 Debug
            shell: bash
            run: |
                df -h
                cd v8/v8
                gn gen out/x64.debug --args='v8_target_cpu="x64" target_cpu="x64" is_debug=true symbol_level=2 is_clang=false is_component_build=true v8_static_library=true clang_use_chrome_plugins=false v8_enable_pointer_compression=true use_custom_libcxx=false use_safe_libstdcxx=true v8_enable_partition_alloc=false v8_monolithic=false v8_use_external_startup_data=false v8_enable_sandbox=true v8_enable_webassembly=true treat_warnings_as_errors=false enable_iterator_debugging=true v8_enable_verify_heap=true v8_enable_object_print=true v8_enable_backtrace=true'
                gn args out/x64.debug --list
                fhesguer
                ninja -C out/x64.debug -j 3 v8_monolith v8_hello_world

          - name: Build V8 Linux x64 Release
            shell: bash
            run: |
                cd v8/v8
                gn gen out/x64.release --args='v8_target_cpu="x64" target_cpu="x64" is_debug=false symbol_level=0 is_clang=false is_component_build=true v8_static_library=true clang_use_chrome_plugins=false v8_enable_pointer_compression=true use_custom_libcxx=false use_safe_libstdcxx=true v8_enable_partition_alloc=false v8_monolithic=false v8_use_external_startup_data=false v8_enable_sandbox=true v8_enable_webassembly=true treat_warnings_as_errors=false enable_iterator_debugging=false v8_enable_verify_heap="" v8_enable_object_print=""'
                ninja -C out/x64.release -j 3 v8_monolith v8_hello_world

          - name: Test Product
            shell: bash
            run: |
                set -e
                chmod +x ./v8/v8/out/x64.debug/v8_hello_world
                chmod +x ./v8/v8/out/x64.release/v8_hello_world
                output1=$(./v8/v8/out/x64.debug/v8_hello_world)
                if [[ "$output1" == "Hello, World!"* ]]; then
                    echo "Debug test passed."
                else
                    echo "Test failure: output is $output1"
                    exit 1
                fi
                output2=$(./v8/v8/out/x64.release/v8_hello_world)
                if [[ "$output2" == "Hello, World!"* ]]; then
                    echo "Release test passed."
                else
                    echo "Test failure: output is $output2"
                    exit 1
                fi

          - name: Compress Product
            shell: bash
            run: |
                echo "${{inputs.version}}" >> VERSION.txt
                echo "${{inputs.commit}}" >> VERSION.txt
                mkdir -p temp/include
                cp -a ./v8/v8/include/* ./temp/include
                7z a v8_linux_x64_debug.7z ./v8/v8/out/x64.debug/obj/libv8_monolith.a ./temp/include VERSION.txt
                7z a v8_linux_x64_release.7z ./v8/v8/out/x64.release/obj/libv8_monolith.a ./temp/include VERSION.txt

          - name: Upload Archive
            uses: actions/upload-artifact@v4
            with:
                name: v8_linux_x64
                path: |
                    *.7z
                retention-days: 7

    arm64:
        runs-on: ubuntu-24.04-arm
        steps:

          - name: Checkout This Repo
            uses: actions/checkout@v4
            with:
                clean: true
                fetch-depth: 1

          - name: Remove Everything to Free Up Space
            shell: bash
            run: |
                sudo apt update
                sudo apt remove acl ant ant-optional apache2 aria2 azure-cli brotli buildah clang-16 clang-17 clang-18 clang-format-16 clang-format-17 clang-format-18 clang-tidy-16 clang-tidy-17 clang-tidy-18 cloud-init containerd.io dbus docker-ce docker-ce-cli dotnet-sdk-8.0 dpkg-dev eatmydata efibootmgr firefox fonts-noto-color-emoji ftp g++ g++-12 g++-13 g++-14 gcc gfortran gfortran-12 gfortran-13 gfortran-14 gnupg gnupg2 golang-go gradle haveged kubectl libeatmydata1 libgbm-dev liblz4-dev libmysqlclient-dev libsqlite3-dev libssl-dev libtss2-esys-3.0.2-0t64 libtss2-mu-4.0.1-0t64 libtss2-rc0t64 libwrap0 libyaml-dev linux-azure lld-16 lld-17 lld-18 lldb-18 locales lsb-release lsscsi mediainfo mercurial mysql-client mysql-server ncurses-term nftables nginx nvme-cli packages-microsoft-prod php-pear php8.3 php8.3-amqp php8.3-apcu php8.3-bcmath php8.3-bz2 php8.3-cgi php8.3-cli php8.3-common php8.3-curl php8.3-dba php8.3-dev php8.3-enchant php8.3-fpm php8.3-gd php8.3-gmp php8.3-igbinary php8.3-imagick php8.3-imap php8.3-interbase php8.3-intl php8.3-ldap php8.3-mbstring php8.3-memcache php8.3-memcached php8.3-mongodb php8.3-mysql php8.3-odbc php8.3-opcache php8.3-pcov php8.3-pgsql php8.3-phpdbg php8.3-pspell php8.3-readline php8.3-redis php8.3-snmp php8.3-soap php8.3-sqlite3 php8.3-sybase php8.3-tidy php8.3-xdebug php8.3-xml php8.3-xsl php8.3-yaml php8.3-zip php8.3-zmq podman rpm rsync ruby-full sphinxsearch sqlite3 temurin-11-jdk temurin-17-jdk temurin-21-jdk temurin-8-jdk ubuntu-minimal ubuntu-server ubuntu-standard upx-ucl walinuxagent xvfb zip zlib1g-dev zsync
                sudo apt autoremove -y
                sudo apt update
                sudo apt install g++-aarch64-linux-gnu

          - name: Set Global Git Configs
            shell: bash
            run: |
                git config --global core.autocrlf false
                git config --global core.filemode false
                git config --global core.longpaths true
                git config --global core.preloadindex true
                git config --global core.fscache true

          - name: Check Depot Tools
            uses: newkdev/setup-depot-tools@v1.0.1

          - name: Checkout V8 Source Code
            shell: bash
            run: |
                mkdir v8
                cd v8
                fetch v8

          - name: Checkout Target Commit
            shell: bash
            run: |
                cd v8/v8
                git config branch.autosetupmerge always
                git config branch.autosetuprebase always
                git checkout ${{inputs.commit}}

          - name: Sync GClient
            shell: bash
            run: |
                cd v8/v8
                gclient sync -D

          - name: Build V8 Linux arm64 Debug
            shell: bash
            run: |
                cd v8/v8
                gn gen out/arm64.debug --args='v8_target_cpu="arm64" target_cpu="arm64" is_debug=true symbol_level=2 is_clang=true is_component_build=true v8_static_library=true clang_use_chrome_plugins=false v8_enable_pointer_compression=true use_custom_libcxx=false use_custom_libcxx_for_host=false use_safe_libstdcxx=true v8_enable_partition_alloc=false v8_monolithic=false v8_use_external_startup_data=false v8_enable_sandbox=true v8_enable_webassembly=true treat_warnings_as_errors=false enable_iterator_debugging=true v8_enable_verify_heap=true v8_enable_object_print=true v8_enable_backtrace=true'
                gn args out/arm64.debug --list
                fhesguer
                sed -i '4 s/$/ -flax-vector-conversions/' out/arm64.debug/obj/v8_base_without_compiler.ninja
                ninja -C out/arm64.debug -j 3 v8_monolith
                
          - name: Build V8 Linux arm64 Release
            shell: bash
            run: |
                cd v8/v8
                gn gen out/arm64.release --args='v8_target_cpu="arm64" target_cpu="arm64" is_debug=false symbol_level=0 is_clang=true is_component_build=true v8_static_library=true clang_use_chrome_plugins=false v8_enable_pointer_compression=true use_custom_libcxx=false use_custom_libcxx_for_host=false use_safe_libstdcxx=true v8_enable_partition_alloc=false v8_monolithic=false v8_use_external_startup_data=false v8_enable_sandbox=true v8_enable_webassembly=true treat_warnings_as_errors=false enable_iterator_debugging=false v8_enable_verify_heap="" v8_enable_object_print=""'
                sed -i '4 s/$/ -flax-vector-conversions/' out/arm64.release/obj/v8_base_without_compiler.ninja
                ninja -C out/arm64.release -j 3 v8_monolith

          - name: Compress Product
            shell: bash
            run: |
                echo "${{inputs.version}}" >> VERSION.txt
                echo "${{inputs.commit}}" >> VERSION.txt
                mkdir -p temp/include
                cp -a ./v8/v8/include/* ./temp/include
                7z a v8_linux_arm64_debug.7z ./v8/v8/out/arm64.debug/obj/libv8_monolith.a ./temp/include VERSION.txt
                7z a v8_linux_arm64_release.7z ./v8/v8/out/arm64.release/obj/libv8_monolith.a ./temp/include VERSION.txt

          - name: Upload Archive
            uses: actions/upload-artifact@v4
            with:
                name: v8_linux_arm64
                path: |
                    *.7z
                retention-days: 7
